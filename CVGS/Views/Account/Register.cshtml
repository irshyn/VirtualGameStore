@model CVGS.Models.RegisterViewModel
@{

    ViewBag.Title = "Register";
}
@Styles.Render("~/Content/themes/base/css")
<style type="text/css">
    .ui-datepicker-calendar {
        display: none;
    }
</style>


<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account with Conestoga Virtual Game Store</h4>
    <p>Required fields are marked with <span style="color:red;font-weight:bolder"><sup>&#8902;</sup></span></p>
    <hr />
    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
    <h4 style="color:#001a66"><b>Account Details</b></h4>
    // Display Name and Email
    <div class="form-group">
        @Html.LabelFor(m => m.DisplayName, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DisplayName, null, new { @class = "text-danger" })
        </div>

        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger" })
        </div>
    </div>

    // Password and Confirm Password
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })
        </div>

        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-danger" })
        </div>
    </div>
    <hr />

    <h4 style="color:#001a66"><b>Personal Information</b></h4>
    // First and Last Names
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
        </div>

        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName, null, new { @class = "text-danger" })
        </div>
    </div>
    //Birth Date and Sex
    <div class="form-group">
        @Html.LabelFor(m => m.BirthDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.EditorFor(m => m.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, null, new { @class = "text-danger" })
        </div>
        @Html.LabelFor(m => m.Sex, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.DropDownList("Sex", new List<SelectListItem>
            {
            new SelectListItem{ Text="Male", Value = "0" },
            new SelectListItem{ Text="Female", Value = "1" },
            new SelectListItem{ Text="I prefer not to say", Value = "2" },
            }, new { @class = "col-md-3 form-control" })
        </div>
    </div>
    <hr />

    <h4 style="color:#001a66"><b>Preferences</b></h4>
    // Favorite Game Genres
    <h5><b>Favorite Game Genres (Optional)</b></h5>
    <br />
    <div class="form-group">

        @Html.LabelFor(m => m.ActionChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.ActionChecked, new { @class = "form-control" })
        </div>

        @Html.LabelFor(m => m.AdventureChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.AdventureChecked, new { @class = "form-control" })
        </div>

        @Html.LabelFor(m => m.RolePlayingChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.RolePlayingChecked, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SimulationChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.SimulationChecked, new { @class = "form-control" })
        </div>

        @Html.LabelFor(m => m.StrategyChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.StrategyChecked, new { @class = "form-control" })
        </div>

        @Html.LabelFor(m => m.PuzzleChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.PuzzleChecked, new { @class = "form-control" })
        </div>
    </div>
    <br />

    //Favorite Platforms
    <h5><b>Favorite Platforms (Optional)</b></h5>
    <br />
    <div class="form-group">

        @Html.LabelFor(m => m.PCChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.PCChecked, new { @class = "form-control" })
        </div>

        @Html.LabelFor(m => m.PlayStationChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.PlayStationChecked, new { @class = "form-control" })
        </div>

        @Html.LabelFor(m => m.XboxChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.XboxChecked, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NintendoChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.NintendoChecked, new { @class = "form-control" })
        </div>

        @Html.LabelFor(m => m.MobileChecked, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.MobileChecked, new { @class = "form-control" })
        </div>
    </div>
    <br />

    // Email Notifications
    <h5><b>Email Notifications (Optional)</b></h5>
    <div class="form-group">
        @Html.LabelFor(m => m.SendPromotionalEmails, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.CheckBoxFor(m => m.SendPromotionalEmails, new { @class = "form-control" })
        </div>
    </div>
    <hr />

    // submit button
    <div class="form-group">
        <div class="pull-right">
            <input type="submit" class="btn btn-primary" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            // to mark required fields with a red asteriks
            $('input[type=text], input[type=password], input[type=date], input[type=select]').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('id') + '"]');
                    var text = label.text();
                    if (text.length > 0) {
                        label.append('<span style="color:red;font-weight:bold"er> <sup>&#8902;</sup></span>');
                    }
                }
            });

            // to style date picker for expiration date
            $('.date-picker').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                //dateFormat: 'mm/yy',
                dateFormat: 'mm/yy',
                yearRange: "-0:+10",
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, month, 1));
                }
            });
        });
    </script>
}
