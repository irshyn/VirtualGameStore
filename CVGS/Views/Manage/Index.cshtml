@model CVGS.Models.AccountViewModel
@{
    ViewBag.Title = "Manage Your Account";
    string sex = Model.Sex == 0 ? "Male" : Model.Sex == 1 ? "Female" : "I prefer not to say";
}
@Styles.Render("~/Content/themes/base/css")
<style type="text/css">
    h4 {
        color: #001a66;
    }

    .ui-datepicker-calendar {
        display: none;
    }

    .modal-content {
        position: relative;
        display: flex;
        flex-direction: column;
        margin-top: 50%;
    }

    .modal-label {
        color: #001a66
    }

    .modal-error {
        color: red;
        font-size: small
    }

    .form-group {
        clear: both;
    }

    .verticalspacing {
        margin-bottom: 2.5em;
    }

    .borderless > tbody > tr > td {
        border: none;
    }

    .btn-spacing {
        margin-top: 1em;
        margin-bottom: 1em;
    }
</style>

<h2>@ViewBag.Title</h2>

<a href="@Url.Action("Index", "Home")" class="btn btn-primary">&nbsp;<span class="glyphicon glyphicon-arrow-left" aria-hidden="true">&nbsp;</span></a>
@Html.ActionLink("Edit Account Details", "ChangeAccountDetails", "Manage", null, new { @class = "btn btn-success btn-large" })

<hr />
<h4><b>Account Details</b></h4>
@*// Display Name and Email*@

<div class="form-group" style="margin-bottom:3em;">
    <div class="col-md-2">
        <b>Password</b>
    </div>
    <div class="col-md-4">
        @Html.ActionLink("Change your password", "ChangePassword")
    </div>
</div>

<div class="form-group verticalspacing">
    <div class="col-md-2">
        <b>@Html.DisplayNameFor(m => m.DisplayName)</b>
    </div>
    <div class="col-md-4">
        @Html.DisplayFor(m => m.DisplayName)
    </div>
</div>

<div class="form-group">
    <div class="col-md-2">
        <b>@Html.DisplayNameFor(m => m.Email)</b>
    </div>
    <div class="col-md-4">
        @Html.DisplayFor(m => m.Email)
    </div>
</div>
<hr />

@*// Personal Information*@
<h4><b>Personal Information</b></h4>

<div class="form-group verticalspacing">
    <div class="col-md-2">
        <b>@Html.Label("Actual Name")</b>
    </div>
    <div class="col-md-4">
        @Html.DisplayFor(m => m.FirstName) @Html.DisplayFor(m => m.LastName)
    </div>
</div>

<div class="form-group verticalspacing">
    <div class="col-md-2">
        <b>@Html.DisplayNameFor(m => m.BirthDate)</b>
    </div>
    <div class="col-md-4">
        @Html.DisplayFor(m => m.BirthDate)
    </div>
</div>

<div class="form-group">
    <div class="col-md-2">
        <b>@Html.DisplayNameFor(m => m.Sex)</b>
    </div>
    <div class="col-md-4">
        @sex
    </div>
</div>
<hr />

@*// Preferences*@
<h4><b>Preferences</b></h4>
<div class="form-group verticalspacing">
    <div class="col-md-2">
        <b>Favorite Game Genres</b>
    </div>
    <div class="col-md-4">
        @Html.DisplayFor(m => m.GameCategoryPreference)
    </div>
</div>
<div class="form-group verticalspacing">
    <div class="col-md-2">
        <b>Favorite Platforms</b>
    </div>
    <div class="col-md-4">
        @Html.DisplayFor(m => m.GamePlatformPreference)
    </div>
</div>
<div class="form-group verticalspacing">
    <div class="col-md-2">
        <b>Email Notifications</b>
    </div>
    <div class="col-md-4">
        @Html.DisplayFor(m => m.SendPromotionalEmailsPreference)
    </div>
</div>
<hr />

@*// Shipping and Mailing Addresses*@
<h4><b>Addresses</b></h4>
@if (string.IsNullOrEmpty(Model.MailingAddress))
{
    @Html.ActionLink("Add Mailing and Shipping Addresses", "ChangeAddressDetails", "Manage", null, new { @class = "btn btn-success btn-large btn-spacing" })
}
else
{
    @Html.ActionLink("Edit Your Addresses", "ChangeAddressDetails", "Manage", null, new { @class = "btn btn-success btn-large btn-spacing" })
    <table class="table borderless">
        <thead>
        </thead>
        <tbody>
            <tr>
                <td><b>@Html.DisplayNameFor(m => m.MailingAddress)</b></td>
                <td>@Html.DisplayFor(m => m.MailingAddress)</td>
            </tr>
            <tr>
                <td><b>@Html.DisplayNameFor(m => m.ShippingAddress)</b></td>
                <td>@Html.DisplayFor(m => m.ShippingAddress)</td>
            </tr>
        </tbody>
    </table>
}
<hr />

@*// Credit Card Information*@
<h4><b>Credit Card Information</b></h4>
<p>Please note that only Visa, MasterCard and American Express credit cards are accepted.</p>
<button type="button" class="btn btn-success btn-spacing" data-toggle="modal" data-target="#creditCardModal">Add New Credit Card</button>
@if (Model.CreditCards != null && Model.CreditCards.Count > 0)
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Issuer</th>
                <th>Credit Card Number</th>
                <th>Expiration Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody class="tbody"></tbody>
    </table>
}

<div class="modal fade" id="creditCardModal" role="dialog" aria-labelledby="creditCardModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title" id="creditCardModalTitle">Add Credit Card</h4>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="creditCardNumber" class="modal-label">Credit Card Number&nbsp;<span style="color:red;font-weight:bolder"><sup>&#8902;</sup></span></label>
                        <input type="text" class="form-control" id="creditCardNumber" placeholder="Enter credit card number" />
                        <span id="cardNumberValidationError" class="modal-error"></span>
                    </div>
                    <div class="form-group">
                        <label for="expirationDate" class="modal-label">Expiration Date&nbsp;<span style="color:red;font-weight:bolder"><sup>&#8902;</sup></span></label>
                        <input type="text" class="date-picker form-control" id="expirationDate" autocomplete="off" placeholder='MM/YY' />
                        <span id="expDateValidationError" class="modal-error"></span>
                    </div>
                    <input type="hidden" id="creditCardId" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnAdd" onclick="AddCreditCard();">Add</button>
                <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="UpdateCreditCard();">Update</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $(document).ready(function () {
        // load the credit card table on page load
        loadTable();

        // this code was added in attempt to solve the date picker not working in FireFox - didn't work
        // what worked was deleting 'tabindex="-1"' from modal
        //$('#creditCardModal').on('shown.bs.modal', function (e) {
        //    $.fn.modal.Constructor.prototype.enforceFocus = function () { };
        //});

        // to style date picker for expiration date
        $('.date-picker').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            dateFormat: 'mm/yy',
            yearRange: "-0:+10",
            onClose: function (dateText, inst) {
                var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                $(this).datepicker('setDate', new Date(year, month, 1));
            }
        });

        // when modal is closed, any information that user might have entered should be cleared
        $('#creditCardModal').on('hidden.bs.modal', function (e) {
            clearModal();
        })

        // on Credit Card Number and Credit Card Expiration Date changes, remove validation error message
        $('#cardNumberValidationError').change(function () {
            $('#cardNumberValidationError').text('');
        });
        $('#creditCardNumber').change(function () {
            $('#cardNumberValidationError').text('');
        });
        $('#expirationDate').change(function () {
            $('#expDateValidationError').text('');
        });
    });

    // Draws the table on the page
    function loadTable() {
        $.ajax({
            url: "/Manage/GetCreditCards",
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                var html = '';
                $.each(result, function (key, item) {
                    html += '<tr><td>';
                    html += item.CardNumber.startsWith("4") ? '<img src="@Url.Content("~/Content/Images/Visa.png")" width="40" alt="Visa logo" class="img-responsive" />' :
                        item.CardNumber.startsWith("5") ? '<img src="@Url.Content("~/Content/Images/Mastercard.png")" width="40" alt="Mastercard logo" class="img-responsive" />' :
                            '<img src="@Url.Content("~/Content/Images/AmEx.png")" width="40" alt="AmEx logo" class="img-responsive" />';
                    html += '</td><td>' + item.CardNumber + '</td>';
                    html += '<td>' + item.ExpirationDate + '</td>';
                    html += '<td><button class="btn-primary btn-sm" onclick="loadModal(' + item.Id + ')"><span class="glyphicon glyphicon-edit"></span></button>&nbsp;&nbsp;';
                    html += '<button class="btn-danger btn-sm" onclick="deleteCreditCard(' + item.Id + ')"><span class="glyphicon glyphicon-remove"></span></button></td>';
                    html += '</tr>';
                });
                $('.tbody').html(html);
            },
            error: function (result) {
                alert(result.Error);
            }
        });
    }

    // add a credit card
    function AddCreditCard() {
        // credit card validation
        var cardNbr = $('#creditCardNumber').val();
        var validationErrorNbr = validateCardNumber(cardNbr);
        if (validationErrorNbr) {
            $('#cardNumberValidationError').text(validationErrorNbr);
        }
        // expiration date validation
        var expDate = $('#expirationDate').val();
        var validationErrorDate = validateExpDate(expDate);
        if (validationErrorDate) {
            $('#expDateValidationError').text(validationErrorDate);
        }

        if (validationErrorNbr || validationErrorDate) {
            return false;
        }

        var ccObj = {
            CardNumber: cardNbr.replace(/\s+/g, ''),
            ExpirationDate: expDate
        };

        $.ajax({
            url: "/Manage/AddCreditCard",
            data: JSON.stringify(ccObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                loadTable();
                $('#creditCardModal').modal('hide');
                location.reload();
            },
            error: function (result) {
                alert(result.Error);
            }
        });
    }

    //Function for loading credit card data into modal for edits
    function loadModal(creditCardId) {
        $('#creditCardId').val(creditCardId);          // will store credit card Id in the hidden control
        //$('#creditCardNumber').css('border-color', 'lightgrey');
        //$('#expirationDate').css('border-color', 'lightgrey');
        $('#creditCardModalTitle').text('Edit Credit Card Information');
        $.ajax({
            url: "/Manage/getCreditCard/" + creditCardId,
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: function (result) {
                $('#creditCardNumber').val(result.CardNumber);
                $('#expirationDate').val(result.ExpirationDate);

                $('#creditCardModal').modal('show');
                $('#btnUpdate').show();
                $('#btnAdd').hide();
            },
            error: function (result) {
                alert(result.Error);
            }
        });
        return false;
    }

    // update credit card info
    function UpdateCreditCard() {
        // credit card validation
        var cardNbr = $('#creditCardNumber').val();
        var validationErrorNbr = validateCardNumber(cardNbr);
        if (validationErrorNbr) {
            $('#cardNumberValidationError').text(validationErrorNbr);
        }
        // expiration date validation
        var expDate = $('#expirationDate').val();
        var validationErrorDate = validateExpDate(expDate);
        if (validationErrorDate) {
            $('#expDateValidationError').text(validationErrorDate);
        }

        if (validationErrorNbr || validationErrorDate) {
            return false;
        }

        var ccObj = {
            Id: $('#creditCardId').val(),
            CardNumber: cardNbr.replace(/\s+/g, ''),
            ExpirationDate: expDate
        };

        $.ajax({
            url: "/Manage/EditCreditCard",
            data: JSON.stringify(ccObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                loadTable();
                $('#creditCardModal').modal('hide');
                location.reload();
            },
            error: function (result) {
                alert(result.Error);
            }
        });
    }

    // delete a credit card
    function deleteCreditCard(Id) {
        var ans = confirm("Are you sure you want to delete this credit card?");
        if (ans) {
            $.ajax({
                url: "/Manage/DeleteCreditCard/" + Id,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    loadTable();
                    location.reload();
                },
                error: function (result) {
                    alert(result.Error);
                }
            });
        }
    }

    function clearModal() {
        $('#creditCardModalTitle').text('Add Credit Card');
        $('#cardNumberValidationError').text('');
        $('#expDateValidationError').text('');
        $('#creditCardId').val("");
        $('#creditCardNumber').val("");
        $('#expirationDate').val("");
        $('#btnUpdate').hide();
        $('#btnAdd').show();
    }

    function validateCardNumber(cardNbr) {
        // remove all spaces
        cardNbr = cardNbr.replace(/\s+/g, '');
        if (!cardNbr) {
            return 'The credit card number is required.';
        }

        // Visa
        var reg = new RegExp("^4[0-9]{12}(?:[0-9]{3})?$");
        if (reg.test(cardNbr)) {
            return;
        }
        // MasterCard
        reg = new RegExp("^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$");
        if (reg.test(cardNbr)) {
            return;
        }

        // American Express
        var reg = new RegExp("^3[47][0-9]{13}$");
        if (reg.test(cardNbr)) {
            return;
        }
        return 'Please provide a valid credit card number.';
    }

    function validateExpDate(expDate) {
        if (!expDate) {
            return 'The expiration date is required.';
        }
        var date = expDate.split('/');
        if (date[0] < (new Date().getMonth()) - 1 && date[1] == new Date().getFullYear()) {
            return 'Your credit card has expired.';
        }
        return false;
    }
    </script>
}
