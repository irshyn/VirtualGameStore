@model IEnumerable<CVGS.Models.FriendListView>
@{
    ViewBag.Title = "Friend List";
}

<style>
    body {
        background: center top no-repeat #1b2838;
        color: white;
    }

    .custom-font {
        font-size: 16px;
    }

    .vertical-space {
        margin-top: 1.5em;
        margin-bottom: 1em;
    }

    .btn:hover .glyphicon-remove {
        color: red;
    }

    .btn:hover .glyphicon-list-alt {
        color: blue;
    }

    .ui-autocomplete {
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 1000;
        display: none;
        float: left;
        min-width: 160px;
        padding: 5px 0;
        margin: 2px 0 0;
        list-style: none;
        font-size: 14px;
        text-align: left;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border: 1px solid rgba(0, 0, 0, 0.15);
        border-radius: 4px;
        -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
        background-clip: padding-box;
    }

        .ui-autocomplete > li > div {
            display: block;
            padding: 3px 20px;
            clear: both;
            font-weight: normal;
            line-height: 1.42857143;
            color: #333333;
            white-space: nowrap;
        }

    .ui-state-hover,
    .ui-state-active,
    .ui-state-focus {
        text-decoration: none;
        color: #262626;
        background-color: #dcdcdc;
        cursor: pointer;
    }

    .ui-helper-hidden-accessible {
        border: 0;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }

    .tempdata {
        color: red;
        font-weight: bold;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    .row {
        margin-bottom:1em;
    }
</style>

<h4 class="vertical-space">Search for user profiles</h4>
<div class="container vertical-space">
    @using (Html.BeginForm("SearchUserProfile", "Manage", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="col-md-8 col-md-offset-2">
            <div class="input-group">
                <input type="text" name="search" id="search" placeholder="Search users by username" class="form-control col-md-6">
                <span class="input-group-btn">
                    <input type="submit" value="Search" class="btn btn-primary" data-disable-with="Search">
                </span>
            </div>
        </div>
    }
</div>
<div class="tempdata">@TempData["message"]</></div>

<h2 class="vertical-space">My Friends List</h2>
@if (Model.Count() > 0)
{
    foreach (var item in Model)
    {
        <div class="row">
            <div class="col-md-3 custom-font">
                @item.DisplayName
            </div>
            <div class="col-md-3">
                <div class="col-md-2"><a href="@Url.Action("Details", "Profile", new { id = item.Id })" class="btn btn-primary" title="View Profile"><span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>&nbsp;&nbsp;VIEW PROFILE</a></div>
            </div>
            <div class="col-md-3">
                <div class="col-md-2"><a href="@Url.Action("Unfriend", "Profile", new { id = item.Id })" class="btn btn-danger" title="Unfriend"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>&nbsp;&nbsp;UNFRIEND</a></div>
            </div>
        </div>
    }
}
else
{
    <p>Your friend list is empty.</p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#search").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Home/AutoCompleteUsers",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.label, value: item.label };
                            }));
                        }
                    })
                },
                messages: {
                    noResults: "", results: ""
                },
                minLength: 1
            });
        });
    </script>
}